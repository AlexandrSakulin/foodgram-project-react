name: Main Foodgram workflow

on:
  push:
    branches:
      - master

jobs:
  tests:
    name: Clone, setup and test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip 
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        pip install -r ./backend/requirements.txt 

    - name: Test with flake8 and django tests
      run: |
        python -m flake8

  build_and_push_backend_to_docker_hub:
      name: Pushing backend image to Docker Hub
      runs-on: ubuntu-latest
      needs: tests
      steps:
        - name: Check out the repo
          uses: actions/checkout@v3

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v2

        - name: Login to Docker
          uses: docker/login-action@v2
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}
        - name: Push to Docker Hub
          uses: docker/build-push-action@v2
          with:
            file: ./backend/Dockerfile
            push: true
            tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_backend:latest  

  build_and_push_frontend_to_docker_hub:
      name: Pushing frontend image to Docker Hub
      runs-on: ubuntu-latest
      needs: 
        - tests
      steps:
        - name: Check out the repo
          uses: actions/checkout@v3
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v2
        - name: Login to Docker
          uses: docker/login-action@v2
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}
        - name: Push to Docker Hub
          uses: docker/build-push-action@v2
          with:
            context: frontend/
            push: true
            tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_frontend:latest

  deploy:
    name: Deploy in server
    runs-on: ubuntu-latest
    needs:
      - tests
      - build_and_push_backend_to_docker_hub
      - build_and_push_frontend_to_docker_hub

    steps:
      - name: Executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            cd foodgram/infra/
            sudo docker compose -f docker-compose.yml down
            sudo docker system prune -a -f
            sudo docker compose -f docker-compose.yml pull
            sudo docker compose -f docker-compose.yml up -d

            cd foodgram/infra/
            rm -f .env
            touch .env
            echo DEBUG=${{ secrets.DEBUG }} >> .env
            echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
            echo ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }} >> .env
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
            echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env

            sudo docker-compose stop
            sudo docker ps -a | grep Exit | cut -d ' ' -f 1 | xargs sudo docker rm
            sudo docker rmi ${{ secrets.DOCKER_USER }}/foodgram_frontend:latest
            sudo docker rmi ${{ secrets.DOCKER_USER }}/foodgram_backend:latest
            sudo docker-compose up -d
            sudo docker image prune -a